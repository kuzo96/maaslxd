{{- define "dispatcher_env" }}
- name: SIDECAR_DISPATCHER
  value: "1"
- name: NODE_ID
  valueFrom:
    fieldRef:
      fieldPath: metadata.name
- name: DISPATCHER_NODE_ID
  valueFrom:
    fieldRef:
      fieldPath: metadata.name
- name: CACHE_DRIVER
  value: {{ default "redis" .Values.poller.cacheDriver | quote }}
- name: DISPATCHER_ARGS
  value: {{ .Values.poller.args | quote }}
{{- end }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fullname" . }}-poller
  labels:
    {{- include "poller.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.poller.replicaCount }}
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      {{- include "poller.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.poller.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "poller.labels" . | nindent 8 }}
    spec:
      {{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion }}
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              {{- include "poller.selectorLabels" . | nindent 14 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.poller.podSecurityContext | nindent 8 }}
      initContainers:
        # - name: wait-app
        #   image: "{{ .Values.poller.image.repository }}:{{ .Values.poller.image.tag | default .Chart.AppVersion }}"
        #   command:
        #     - sh
        #     - '-c'
        #     - >-
        #         until nc -z {{ include "fullname" . }} {{ .Values.phpService.port }}; do
        #           echo waiting for librenms;
        #           sleep 2;
        #         done
        - name: init-env
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command:
            - sh
            - '-c'
            - >-
                export | cut -d' ' -f2 | tr -d "'"  > /data/.env
          envFrom:
            {{- include "librenms.environment_ref_default" . | nindent 12 }}
          env:
            {{- include "librenms.dispatcher_env" . | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /data
      # {{- if .Values.nagios }}
      #   - name: nagios-plugins
      #     image: "{{ .Values.poller.image.repository }}:{{ .Values.poller.image.tag | default .Chart.AppVersion }}"
      #     command:
      #       - sh
      #       - '-c'
      #       - apk add nagios-plugins-all
      #     volumeMounts:
      #       - name: nagios
      #         mountPath: /usr/lib/nagios
      # {{- end }}
      containers:
        - name: poller
          securityContext:
            {{- toYaml .Values.poller.securityContext | nindent 12 }}
          image: "{{ .Values.poller.image.repository }}:{{ .Values.poller.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.poller.image.pullPolicy }}
          envFrom:
            {{- include "environment_ref_default" . | nindent 12 }}
          env:
            {{- include "dispatcher_env" . | nindent 12 }}
          resources:
            {{- toYaml .Values.poller.resources | nindent 12 }}
          # lifecycle:
          #   {{- if .Values.applyPatchPR }}
          #   postStart:
          #     exec:
          #       command:
          #         - sh
          #         - '-c'
          #         - >-
          #             for PR_ID in {{ join " " .Values.applyPatchPR }}; do
          #               ./scripts/github-apply ${PR_ID};
          #             done
          #   {{- end }}
          #   preStop:
          #     exec:
          #       command:
          #         - sh
          #         - '-c'
          #         - >-
          #             mysql -h ${DB_HOST} -u ${DB_USER} --password=${DB_PASSWORD} ${DB_NAME} -e
          #             "DELETE FROM poller_cluster WHERE node_id = '${DISPATCHER_NODE_ID}';" ;
          #             s6-svscanctl -q /var/run/s6/services ;
          #             killall -9 s6-supervise
          # livenessProbe:
          #   exec:
          #     command:
          #       - pgrep
          #       - python3
          #   periodSeconds: 10
          #   failureThreshold: 2
          #   timeoutSeconds: 5
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - "curl --fail http://{{ include "fullname" . }}:80/ || exit 1"
            initialDelaySeconds: 15
            periodSeconds: 30       
          volumeMounts:
            - name: data
              mountPath: /data
      #       - name: nagios
      #         mountPath: /usr/lib/nagios
            - name: config
              mountPath: /opt/librenms/config.php
              subPath: config.php
      volumes:
        - name: data
      #   - name: nagios
        - name: config
          configMap:
            name: {{ include "fullname" . }}-config
      {{- with .Values.poller.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.poller.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.poller.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
