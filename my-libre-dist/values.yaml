# Default values for php-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your template
replicaCount: 1
image:
  repository: repo.cpt.gov.vn/staging/librenms-dist-main
  tag: "latest"
  pullPolicy: Always
  
hpa:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 50

phpService:
  name: web
  type: ClusterIP
  port: 80

rrdcached:
  name: rrdcached
  type: ClusterIP
  port: 42217
memcached:
  name: memcached
  type: ClusterIP
  port: 11211

nodeSelector: 
  cloud: "openstack"
key: null
ingress:
  enabled: true
  # Used to  create Ingress record (should used with service.type: ClusterIP).
  hosts:
    - librenms.cpt.gov.vn
  annotations:
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  tls:
    # Secrets must be manually created in the namespaces
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local

resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 1000m
    memory: 1Gi

persistence:
  enabled: true
  size: 10Gi
  existingClaim: ""
  mountPath: /opt/
  storageClass: ""
  annotations: {}
  accessModes:
      #- ReadWriteMany
    - ReadWriteOnce
    
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

securityContext: &defaultSecurityContext
  capabilities:
    add:
      - NET_ADMIN
      - NET_RAW
timezone: &timezone Asia/Ho_Chi_Minh
# -- Download Nagios check scripts before launching application.
nagios: false

mysql:
  name: mariadb
  type: ClusterIP
  port: 3306
  # install: true
  # serviceAccount:
  #   create: false
  auth:
    database: librenms
    username: librenms
    password: librenms
    rootPassword: librenms

  # volumePermissions:
  #   enabled: true
  # primary:
  #   extraEnvVars:
  #     - name: TZ
  #       value: *timezone
  #   persistence:
  #     enabled: true
  #     size: 2Gi
redis:
  name: redis
  type: ClusterIP
  port: 6379
#   install: true
#   serviceAccount:
#     create: false
#   architecture: standalone
#   database: 0
  auth:
    enabled: true
    password: "ktm2021"
#   master:
#     persistence:
#       enabled: false


poller:
  image:
    repository: repo.cpt.gov.vn/staging/librenms-dist-poller
    tag: "latest"
    pullPolicy: Always
  replicaCount: 1
  cacheDriver: {}
  nodeSelector: {}
    # cloud: "openstack"
  tolerations: []
  affinity: {}
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: *defaultSecurityContext
  resources: {}
  # -- arguments to pass to librenms-service.py.
  # Valid: -t -d -v -g
  args: ""

# syslog:
#   replicaCount: 1
#   # -- If using UDP + NodePort, we recommend setting a specific node.
#   nodeSelector: {}
#   tolerations: []
#   affinity: {}
#   podAnnotations: {}
#   podSecurityContext: {}
#   securityContext: *defaultSecurityContext
#   service:
#     type: ClusterIP
#     # -- Set value to null to disable the service.
#     ports:
#       tcp: 514
#       udp: 514
#   resources: {}

# rrdcached:
#   image:
#     repository: crazymax/rrdcached
#     tag: "1.7.2-r4"
#     pullPolicy: IfNotPresent
#   securityContext:
#     allowPrivilegeEscalation: false
#   service:
#     type: ClusterIP
#     port: 42217
#   resources: {}

# smokeping:
#   enabled: false
#   # -- Set amount of pings
#   pings: 20
#   # -- can be 15min, hourly, daily
#   cron: 15min
#   # -- expose to ingress
#   ingress: true
#   config:
#     general:
#       owner: LinuxServer.io
#       contact: ironicbadger@linuxserver.io
#       mailhost: my.mail.host
#   auth:
#     # -- copy from LibreNMS database as htpasswd
#     librenms: true
#     # -- allow guest access
#     guest: false
#   image:
#     repository: linuxserver/smokeping
#     tag: "2.7.3"
#     pullPolicy: IfNotPresent





# memcached:
#   install: true
#   serviceAccount:
#     create: false
#   resources:
#     limits:
#       memory: 200Mi
#     requests:
#       memory: 10Mi

config: {}